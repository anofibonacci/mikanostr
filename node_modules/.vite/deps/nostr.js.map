{
  "version": 3,
  "sources": ["../../.pnpm/ws@8.13.0/node_modules/ws/browser.js", "../../.pnpm/nostr@0.2.8/node_modules/nostr/lib/relay.js", "../../.pnpm/nostr@0.2.8/node_modules/nostr/lib/relay-pool.js", "browser-external:crypto", "../../.pnpm/noble-secp256k1@1.2.14/node_modules/noble-secp256k1/index.js", "browser-external:util", "../../.pnpm/nostr@0.2.8/node_modules/nostr/index.js"],
  "sourcesContent": ["'use strict';\n\nmodule.exports = function () {\n  throw new Error(\n    'ws does not work in the browser. Browser clients must use the native ' +\n      'WebSocket object'\n  );\n};\n", "const WS = typeof WebSocket !== 'undefined' ? WebSocket : require('ws')\n\nRelay.prototype.wait_connected = async function relay_wait_connected(data) {\n\tlet retry = 1000\n\twhile (true) {\n\t\tif (this.ws.readyState !== 1) {\n\t\t\tawait sleep(retry)\n\t\t\tretry *= 1.5\n\t\t}\n\t\telse {\n\t\t\treturn\n\t\t}\n\t}\n}\n\n\nfunction Relay(relay, opts={})\n{\n\tif (!(this instanceof Relay))\n\t\treturn new Relay(relay, opts)\n\n\tthis.url = relay\n\tthis.opts = opts\n\n\tif (opts.reconnect == null)\n\t\topts.reconnect = true\n\n\tconst me = this\n\tme.onfn = {}\n\n\tinit_websocket(me)\n\t\t.catch(e => {\n\t\t\tif (me.onfn.error)\n\t\t\t\tme.onfn.error(e)\n\t\t})\n\n\treturn this\n}\n\nfunction init_websocket(me) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst ws = me.ws = new WS(me.url);\n\n\t\tlet resolved = false\n\t\tws.onmessage = (m) => {\n\t\t\thandle_nostr_message(me, m)\n\t\t\tif (me.onfn.message)\n\t\t\t\tme.onfn.message(m)\n\t\t}\n\t\tws.onclose = (e) => {\n\t\t\tif (me.onfn.close)\n\t\t\t\tme.onfn.close(e)\n\t\t\tif (me.reconnecting)\n\t\t\t\treturn reject(new Error(\"close during reconnect\"))\n\t\t\tif (!me.manualClose && me.opts.reconnect)\n\t\t\t\treconnect(me)\n\t\t}\n\t\tws.onerror = (e) => {\n\t\t\tif (me.onfn.error)\n\t\t\t\tme.onfn.error(e)\n\t\t\tif (me.reconnecting)\n\t\t\t\treturn reject(new Error(\"error during reconnect\"))\n\t\t\tif (me.opts.reconnect)\n\t\t\t\treconnect(me)\n\t\t}\n\t\tws.onopen = (e) => {\n\t\t\tif (me.onfn.open)\n\t\t\t\tme.onfn.open(e)\n\n\t\t\tif (resolved) return\n\n\t\t\tresolved = true\n\t\t\tresolve(me)\n\t\t}\n\t});\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function reconnect(me)\n{\n\tconst reconnecting = true\n\tlet n = 100\n\ttry {\n\t\tme.reconnecting = true\n\t\tawait init_websocket(me)\n\t\tme.reconnecting = false\n\t} catch {\n\t\t//console.error(`error thrown during reconnect... trying again in ${n} ms`)\n\t\tawait sleep(n)\n\t\tn *= 1.5\n\t}\n}\n\nRelay.prototype.on = function relayOn(method, fn) {\n\tthis.onfn[method] = fn\n\treturn this\n}\n\nRelay.prototype.close = function relayClose() {\n\tif (this.ws) {\n\t\tthis.manualClose = true\n\t\tthis.ws.close()\n\t}\n}\n\nRelay.prototype.subscribe = function relay_subscribe(sub_id, filters) {\n\tif (Array.isArray(filters))\n\t\tthis.send([\"REQ\", sub_id, ...filters])\n\telse\n\t\tthis.send([\"REQ\", sub_id, filters])\n}\n\nRelay.prototype.unsubscribe = function relay_unsubscribe(sub_id) {\n\tthis.send([\"CLOSE\", sub_id])\n}\n\nRelay.prototype.send = async function relay_send(data) {\n\tawait this.wait_connected()\n\tthis.ws.send(JSON.stringify(data))\n}\n\nfunction handle_nostr_message(relay, msg)\n{\n\tlet data\n\ttry {\n\t\tdata = JSON.parse(msg.data)\n\t} catch (e) {\n\t\tconsole.error(\"handle_nostr_message\", e)\n\t\treturn\n\t}\n\tif (data.length >= 2) {\n\t\tswitch (data[0]) {\n\t\tcase \"EVENT\":\n\t\t\tif (data.length < 3)\n\t\t\t\treturn\n\t\t\treturn relay.onfn.event && relay.onfn.event(data[1], data[2])\n\t\tcase \"EOSE\":\n\t\t\treturn relay.onfn.eose && relay.onfn.eose(data[1])\n\t\tcase \"NOTICE\":\n\t\t\treturn relay.onfn.notice && relay.onfn.notice(...data.slice(1))\n\t\tcase \"OK\":\n\t\t\treturn relay.onfn.ok && relay.onfn.ok(...data.slice(1))\n\t\t}\n\t}\n}\n\nmodule.exports = Relay\n", "\nconst Relay = require('./relay')\n\nfunction RelayPool(relays, opts)\n{\n\tif (!(this instanceof RelayPool))\n\t\treturn new RelayPool(relays, opts)\n\n\tthis.onfn = {}\n\tthis.relays = []\n\tthis.opts = opts\n\n\tfor (const relay of relays) {\n\t\tthis.add(relay)\n\t}\n\n\treturn this\n}\n\nRelayPool.prototype.close = function relayPoolClose() {\n\tfor (const relay of this.relays) {\n\t\trelay.close()\n\t}\n}\n\nRelayPool.prototype.on = function relayPoolOn(method, fn) {\n\tfor (const relay of this.relays) {\n\t\tthis.onfn[method] = fn\n\t\trelay.onfn[method] = fn.bind(null, relay)\n\t}\n\treturn this\n}\n\nRelayPool.prototype.has = function relayPoolHas(relayUrl) {\n\tfor (const relay of this.relays) {\n\t\tif (relay.url === relayUrl)\n\t\t\treturn true\n\t}\n\n\treturn false\n}\n\nRelayPool.prototype.send = function relayPoolSend(payload, relay_ids) {\n\tconst relays = relay_ids ? this.find_relays(relay_ids) : this.relays\n\tfor (const relay of relays) {\n\t\trelay.send(payload)\n\t}\n}\n\nRelayPool.prototype.setupHandlers = function relayPoolSetupHandlers()\n{\n\t// setup its message handlers with the ones we have already\n\tconst keys = Object.keys(this.onfn)\n\tfor (const handler of keys) {\n\t\tfor (const relay of this.relays) {\n\t\t\trelay.onfn[handler] = this.onfn[handler].bind(null, relay)\n\t\t}\n\t}\n}\n\nRelayPool.prototype.remove = function relayPoolRemove(url) {\n\tlet i = 0\n\n\tfor (const relay of this.relays) {\n\t\tif (relay.url === url) {\n\t\t\trelay.ws && relay.ws.close()\n\t\t\tthis.relays = this.replays.splice(i, 1)\n\t\t\treturn true\n\t\t}\n\n\t\ti += 1\n\t}\n\n\treturn false\n}\n\nRelayPool.prototype.subscribe = function relayPoolSubscribe(sub_id, filters, relay_ids) {\n\tconst relays = relay_ids ? this.find_relays(relay_ids) : this.relays\n\tfor (const relay of relays) {\n\t\trelay.subscribe(sub_id, filters)\n\t}\n}\n\nRelayPool.prototype.unsubscribe = function relayPoolUnsubscibe(sub_id, relay_ids) {\n\tconst relays = relay_ids ? this.find_relays(relay_ids) : this.relays\n\tfor (const relay of relays) {\n\t\trelay.unsubscribe(sub_id)\n\t}\n}\n\n\nRelayPool.prototype.add = function relayPoolAdd(relay) {\n\tif (relay instanceof Relay) {\n\t\tif (this.has(relay.url))\n\t\t\treturn false\n\n\t\tthis.relays.push(relay)\n\t\tthis.setupHandlers()\n\t\treturn true\n\t}\n\n\tif (this.has(relay))\n\t\treturn false\n\n\tconst r = Relay(relay, this.opts)\n\tthis.relays.push(r)\n\tthis.setupHandlers()\n\treturn true\n}\n\nRelayPool.prototype.find_relays = function relayPoolFindRelays(relay_ids) {\n\tif (relay_ids instanceof Relay)\n\t\treturn [relay_ids]\n\n\tif (relay_ids.length === 0)\n\t\treturn []\n\n\tif (!relay_ids[0])\n\t\tthrow new Error(\"what!?\")\n\n\tif (relay_ids[0] instanceof Relay)\n\t\treturn relay_ids\n\n\treturn this.relays.reduce((acc, relay) => {\n\t\tif (relay_ids.some((rid) => relay.url === rid))\n\t\t\tacc.push(relay)\n\t\treturn acc\n\t}, [])\n}\n\nmodule.exports = RelayPool\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"crypto\" has been externalized for browser compatibility. Cannot access \"crypto.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "\"use strict\";\n/*! noble-secp256k1 - MIT License (c) Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.utils = exports.schnorr = exports.verify = exports.signSync = exports.sign = exports.getSharedSecret = exports.recoverPublicKey = exports.getPublicKey = exports.SignResult = exports.Signature = exports.Point = exports.CURVE = void 0;\nconst CURVE = {\n    a: 0n,\n    b: 7n,\n    P: 2n ** 256n - 2n ** 32n - 977n,\n    n: 2n ** 256n - 432420386565659656852420866394968145599n,\n    h: 1n,\n    Gx: 55066263022277343669578718895168534326250603453777594175500187360389116729240n,\n    Gy: 32670510020758816978083085130507043184471273380659243275938904335757337482424n,\n    beta: 0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501een,\n};\nexports.CURVE = CURVE;\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    return mod(x ** 3n + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === 0n;\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, 1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        const a = this;\n        const b = other;\n        const az2 = mod(a.z * a.z);\n        const az3 = mod(a.z * az2);\n        const bz2 = mod(b.z * b.z);\n        const bz3 = mod(b.z * bz2);\n        return mod(a.x * bz2) === mod(az2 * b.x) && mod(a.y * bz3) === mod(az3 * b.y);\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const X1 = this.x;\n        const Y1 = this.y;\n        const Z1 = this.z;\n        const A = mod(X1 ** 2n);\n        const B = mod(Y1 ** 2n);\n        const C = mod(B ** 2n);\n        const D = mod(2n * (mod(mod((X1 + B) ** 2n)) - A - C));\n        const E = mod(3n * A);\n        const F = mod(E ** 2n);\n        const X3 = mod(F - 2n * D);\n        const Y3 = mod(E * (D - X3) - 8n * C);\n        const Z3 = mod(2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint)) {\n            throw new TypeError('JacobianPoint#add: expected JacobianPoint');\n        }\n        const X1 = this.x;\n        const Y1 = this.y;\n        const Z1 = this.z;\n        const X2 = other.x;\n        const Y2 = other.y;\n        const Z2 = other.z;\n        if (X2 === 0n || Y2 === 0n)\n            return this;\n        if (X1 === 0n || Y1 === 0n)\n            return other;\n        const Z1Z1 = mod(Z1 ** 2n);\n        const Z2Z2 = mod(Z2 ** 2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(Y1 * Z2 * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === 0n) {\n            if (r === 0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H ** 2n);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r ** 2n - HHH - 2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        if (!isValidScalar(scalar))\n            throw new TypeError('Point#multiply: expected valid scalar');\n        let n = mod(BigInt(scalar), CURVE.n);\n        if (!USE_ENDOMORPHISM) {\n            let p = JacobianPoint.ZERO;\n            let d = this;\n            while (n > 0n) {\n                if (n & 1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= 1n;\n            }\n            return p;\n        }\n        let [k1neg, k1, k2neg, k2] = splitScalarEndo(n);\n        let k1p = JacobianPoint.ZERO;\n        let k2p = JacobianPoint.ZERO;\n        let d = this;\n        while (k1 > 0n || k2 > 0n) {\n            if (k1 & 1n)\n                k1p = k1p.add(d);\n            if (k2 & 1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= 1n;\n            k2 >>= 1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        let points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += 1n;\n            }\n            if (wbits === 0) {\n                f = f.add(window % 2 ? precomputes[offset].negate() : precomputes[offset]);\n            }\n            else {\n                const cached = precomputes[offset + Math.abs(wbits) - 1];\n                p = p.add(wbits < 0 ? cached.negate() : cached);\n            }\n        }\n        return [p, f];\n    }\n    multiply(scalar, affinePoint) {\n        if (!isValidScalar(scalar))\n            throw new TypeError('Point#multiply: expected valid scalar');\n        let n = mod(BigInt(scalar), CURVE.n);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const [k1neg, k1, k2neg, k2] = splitScalarEndo(n);\n            let k1p, k2p, f1p, f2p;\n            [k1p, f1p] = this.wNAF(k1, affinePoint);\n            [k2p, f2p] = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            [point, fake] = [k1p.add(k2p), f1p.add(f2p)];\n        }\n        else {\n            [point, fake] = this.wNAF(n, affinePoint);\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const invZ2 = invZ ** 2n;\n        const x = mod(this.x * invZ2);\n        const y = mod(this.y * invZ2 * invZ);\n        return new Point(x, y);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, 1n);\nJacobianPoint.ZERO = new JacobianPoint(0n, 1n, 0n);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.slice(1));\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & 1n) === 1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.slice(1, 33));\n        const y = bytesToNumber(bytes.slice(33));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const header = bytes[0];\n        if (bytes.length === 32 || (bytes.length === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (bytes.length === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${bytes.length}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        let h = msgHash instanceof Uint8Array ? bytesToNumber(msgHash) : hexToNumber(msgHash);\n        const sig = normalizeSignature(signature);\n        const { r, s } = sig;\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid yParity bit');\n        }\n        const prefix = 2 + (recovery & 1);\n        const P_ = Point.fromHex(`0${prefix}${pad64(r)}`);\n        const sP = JacobianPoint.fromAffine(P_).multiplyUnsafe(s);\n        const hG = JacobianPoint.BASE.multiply(h);\n        const rinv = invert(r, CURVE.n);\n        const Q = sP.subtract(hG).multiplyUnsafe(rinv);\n        const point = Q.toAffine();\n        point.assertValidity();\n        return point;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = pad64(this.x);\n        if (isCompressed) {\n            return `${this.y & 1n ? '03' : '02'}${x}`;\n        }\n        else {\n            return `04${x}${pad64(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { P } = CURVE;\n        const { x, y } = this;\n        if (x === 0n || y === 0n || x >= P || y >= P)\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if ((left - right) % P !== 0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nexports.Point = Point;\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(0n, 0n);\nfunction sliceDer(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n    }\n    static fromCompact(hex) {\n        if (typeof hex !== 'string' && !(hex instanceof Uint8Array)) {\n            throw new TypeError(`Signature.fromCompact: Expected string or Uint8Array`);\n        }\n        const str = hex instanceof Uint8Array ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error('Signature.fromCompact: Expected 64-byte hex');\n        const sig = new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n        sig.assertValidity();\n        return sig;\n    }\n    static fromDER(hex) {\n        const fn = 'Signature.fromDER';\n        if (typeof hex !== 'string' && !(hex instanceof Uint8Array)) {\n            throw new TypeError(`${fn}: Expected string or Uint8Array`);\n        }\n        const str = hex instanceof Uint8Array ? bytesToHex(hex) : hex;\n        const length = parseByte(str.slice(2, 4));\n        if (str.slice(0, 2) !== '30' || length !== str.length - 4 || str.slice(4, 6) !== '02') {\n            throw new Error(`${fn}: Invalid signature ${str}`);\n        }\n        const rLen = parseByte(str.slice(6, 8));\n        const rEnd = 8 + rLen;\n        const rr = str.slice(8, rEnd);\n        if (rr.startsWith('00') && parseByte(rr.slice(2, 4)) <= 0x7f) {\n            throw new Error(`${fn}: Invalid r with trailing length`);\n        }\n        const r = hexToNumber(rr);\n        const separator = str.slice(rEnd, rEnd + 2);\n        if (separator !== '02') {\n            throw new Error(`${fn}: Invalid r-s separator`);\n        }\n        const sLen = parseByte(str.slice(rEnd + 2, rEnd + 4));\n        const diff = length - sLen - rLen - 10;\n        if (diff > 0 || diff === -4) {\n            throw new Error(`${fn}: Invalid total length`);\n        }\n        if (sLen > length - rLen - 4) {\n            throw new Error(`${fn}: Invalid s`);\n        }\n        const sStart = rEnd + 4;\n        const ss = str.slice(sStart, sStart + sLen);\n        if (ss.startsWith('00') && parseByte(ss.slice(2, 4)) <= 0x7f) {\n            throw new Error(`${fn}: Invalid s with trailing length`);\n        }\n        const s = hexToNumber(ss);\n        const sig = new Signature(r, s);\n        sig.assertValidity();\n        return sig;\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDer(numberToHex(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDer(numberToHex(this.r));\n        const rLen = numberToHex(rHex.length / 2);\n        const sLen = numberToHex(sHex.length / 2);\n        const length = numberToHex(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return pad64(this.r) + pad64(this.s);\n    }\n}\nexports.Signature = Signature;\nexports.SignResult = Signature;\nfunction concatBytes(...arrays) {\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction bytesToHex(uint8a) {\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += uint8a[i].toString(16).padStart(2, '0');\n    }\n    return hex;\n}\nfunction pad64(num) {\n    return num.toString(16).padStart(64, '0');\n}\nfunction pad32b(num) {\n    return hexToBytes(pad64(num));\n}\nfunction numberToHex(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        array[i] = Number.parseInt(hex.slice(j, j + 2), 16);\n    }\n    return array;\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? hex : hexToBytes(hex);\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction parseByte(str) {\n    return Number.parseInt(str, 16) * 2;\n}\nfunction isValidScalar(num) {\n    if (typeof num === 'bigint' && num > 0n)\n        return true;\n    if (typeof num === 'number' && num > 0 && Number.isSafeInteger(num))\n        return true;\n    return false;\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= 0 ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > 0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, 3n) * b3) % P;\n    const b9 = (pow2(b6, 3n) * b3) % P;\n    const b11 = (pow2(b9, 2n) * b2) % P;\n    const b22 = (pow2(b11, 11n) * b11) % P;\n    const b44 = (pow2(b22, 22n) * b22) % P;\n    const b88 = (pow2(b44, 44n) * b44) % P;\n    const b176 = (pow2(b88, 88n) * b88) % P;\n    const b220 = (pow2(b176, 44n) * b44) % P;\n    const b223 = (pow2(b220, 3n) * b3) % P;\n    const t1 = (pow2(b223, 23n) * b22) % P;\n    const t2 = (pow2(t1, 6n) * b2) % P;\n    return pow2(t2, 2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === 0n || modulo <= 0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let [x, y, u, v] = [0n, 1n, 1n, 0n];\n    while (a !== 0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        [b, a] = [a, r];\n        [x, y] = [u, v];\n        [u, v] = [m, n];\n    }\n    const gcd = b;\n    if (gcd !== 1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, n = CURVE.P) {\n    const len = nums.length;\n    const scratch = new Array(len);\n    let acc = 1n;\n    for (let i = 0; i < len; i++) {\n        if (nums[i] === 0n)\n            continue;\n        scratch[i] = acc;\n        acc = mod(acc * nums[i], n);\n    }\n    acc = invert(acc, n);\n    for (let i = len - 1; i >= 0; i--) {\n        if (nums[i] === 0n)\n            continue;\n        const tmp = mod(acc * nums[i], n);\n        nums[i] = mod(acc * scratch[i], n);\n        acc = tmp;\n    }\n    return nums;\n}\nconst divNearest = (a, b) => (a + b / 2n) / b;\nconst POW_2_128 = 2n ** 128n;\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const a1 = 0x3086d221a7d46bcde86c90e49284eb15n;\n    const b1 = -0xe4437ed6010e88286f547fa90abfe4c3n;\n    const a2 = 0x114ca50f7a8e2f3f657c1108d9d44cfd8n;\n    const b2 = a1;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128)\n        throw new Error('splitScalarEndo: Endomorphism failed');\n    return [k1neg, k1, k2neg, k2];\n}\nfunction truncateHash(hash) {\n    if (typeof hash !== 'string')\n        hash = bytesToHex(hash);\n    let msg = hexToNumber(hash || '0');\n    const byteLength = hash.length / 2;\n    const delta = byteLength * 8 - 256;\n    if (delta > 0) {\n        msg = msg >> BigInt(delta);\n    }\n    if (msg >= CURVE.n) {\n        msg -= CURVE.n;\n    }\n    return msg;\n}\nfunction _abc6979(msgHash, privateKey) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid msgHash, not \"${msgHash}\"`);\n    const num = typeof msgHash === 'string' ? hexToNumber(msgHash) : bytesToNumber(msgHash);\n    const h1 = pad32b(num);\n    const h1n = bytesToNumber(h1);\n    const x = pad32b(privateKey);\n    let v = new Uint8Array(32).fill(1);\n    let k = new Uint8Array(32).fill(0);\n    const b0 = Uint8Array.from([0x00]);\n    const b1 = Uint8Array.from([0x01]);\n    return [h1, h1n, x, v, k, b0, b1];\n}\nasync function getQRSrfc6979(msgHash, privateKey) {\n    const privKey = normalizePrivateKey(privateKey);\n    let [h1, h1n, x, v, k, b0, b1] = _abc6979(msgHash, privKey);\n    const hmac = exports.utils.hmacSha256;\n    k = await hmac(k, v, b0, x, h1);\n    v = await hmac(k, v);\n    k = await hmac(k, v, b1, x, h1);\n    v = await hmac(k, v);\n    for (let i = 0; i < 1000; i++) {\n        v = await hmac(k, v);\n        let qrs = calcQRSFromK(v, h1n, privKey);\n        if (qrs)\n            return qrs;\n        k = await hmac(k, v, b0);\n        v = await hmac(k, v);\n    }\n    throw new TypeError('secp256k1: Tried 1,000 k values for sign(), all were invalid');\n}\nfunction getQRSrfc6979Sync(msgHash, privateKey) {\n    const privKey = normalizePrivateKey(privateKey);\n    let [h1, h1n, x, v, k, b0, b1] = _abc6979(msgHash, privKey);\n    const hmac = exports.utils.hmacSha256Sync;\n    if (!hmac)\n        throw new Error('utils.hmacSha256Sync is undefined, you need to set it');\n    k = hmac(k, v, b0, x, h1);\n    if (k instanceof Promise)\n        throw new Error('To use sync sign(), ensure utils.hmacSha256 is sync');\n    v = hmac(k, v);\n    k = hmac(k, v, b1, x, h1);\n    v = hmac(k, v);\n    for (let i = 0; i < 1000; i++) {\n        v = hmac(k, v);\n        let qrs = calcQRSFromK(v, h1n, privKey);\n        if (qrs)\n            return qrs;\n        k = hmac(k, v, b0);\n        v = hmac(k, v);\n    }\n    throw new TypeError('secp256k1: Tried 1,000 k values for sign(), all were invalid');\n}\nfunction isWithinCurveOrder(num) {\n    return 0 < num && num < CURVE.n;\n}\nfunction calcQRSFromK(v, msg, priv) {\n    const k = bytesToNumber(v);\n    if (!isWithinCurveOrder(k))\n        return;\n    const max = CURVE.n;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, max);\n    const s = mod(invert(k, max) * (msg + r * priv), max);\n    if (r === 0n || s === 0n)\n        return;\n    return [q, r, s];\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    else {\n        return Signature.fromDER(signature);\n    }\n}\nfunction getPublicKey(privateKey, isCompressed = false) {\n    const point = Point.fromPrivateKey(privateKey);\n    if (typeof privateKey === 'string') {\n        return point.toHex(isCompressed);\n    }\n    return point.toRawBytes(isCompressed);\n}\nexports.getPublicKey = getPublicKey;\nfunction recoverPublicKey(msgHash, signature, recovery) {\n    const point = Point.fromSignature(msgHash, signature, recovery);\n    return typeof msgHash === 'string' ? point.toHex() : point.toRawBytes();\n}\nexports.recoverPublicKey = recoverPublicKey;\nfunction isPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nfunction getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    const shared = b.multiply(normalizePrivateKey(privateA));\n    return typeof privateA === 'string'\n        ? shared.toHex(isCompressed)\n        : shared.toRawBytes(isCompressed);\n}\nexports.getSharedSecret = getSharedSecret;\nfunction QRSToSig(qrs, opts, str = false) {\n    const [q, r, s] = qrs;\n    let { canonical, der, recovered } = opts;\n    let recovery = (q.x === r ? 0 : 2) | Number(q.y & 1n);\n    let adjustedS = s;\n    const HIGH_NUMBER = CURVE.n >> 1n;\n    if (s > HIGH_NUMBER && canonical) {\n        adjustedS = CURVE.n - s;\n        recovery ^= 1;\n    }\n    const sig = new Signature(r, adjustedS);\n    sig.assertValidity();\n    const hex = der === false ? sig.toCompactHex() : sig.toDERHex();\n    const hashed = str ? hex : hexToBytes(hex);\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    return QRSToSig(await getQRSrfc6979(msgHash, privKey), opts, typeof msgHash === 'string');\n}\nexports.sign = sign;\nfunction signSync(msgHash, privKey, opts = {}) {\n    return QRSToSig(getQRSrfc6979Sync(msgHash, privKey), opts, typeof msgHash === 'string');\n}\nexports.signSync = signSync;\nfunction verify(signature, msgHash, publicKey) {\n    const { n } = CURVE;\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    const h = truncateHash(msgHash);\n    if (h === 0n)\n        return false;\n    const pubKey = JacobianPoint.fromAffine(normalizePublicKey(publicKey));\n    const s1 = invert(s, n);\n    const u1 = mod(h * s1, n);\n    const u2 = mod(r * s1, n);\n    const Ghs1 = JacobianPoint.BASE.multiply(u1);\n    const Prs1 = pubKey.multiplyUnsafe(u2);\n    const R = Ghs1.add(Prs1).toAffine();\n    const v = mod(R.x, n);\n    return v === r;\n}\nexports.verify = verify;\nasync function taggedHash(tag, ...messages) {\n    const tagB = new Uint8Array(tag.split('').map((c) => c.charCodeAt(0)));\n    const tagH = await exports.utils.sha256(tagB);\n    const h = await exports.utils.sha256(concatBytes(tagH, tagH, ...messages));\n    return bytesToNumber(h);\n}\nasync function createChallenge(x, P, message) {\n    const rx = pad32b(x);\n    const t = await taggedHash('BIP0340/challenge', rx, P.toRawX(), message);\n    return mod(t, CURVE.n);\n}\nfunction hasEvenY(point) {\n    return mod(point.y, 2n) === 0n;\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        if (r <= 0n || s <= 0n || r >= CURVE.P || s >= CURVE.n)\n            throw new Error('Invalid signature');\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64) {\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        }\n        const r = bytesToNumber(bytes.slice(0, 32));\n        const s = bytesToNumber(bytes.slice(32));\n        return new SchnorrSignature(r, s);\n    }\n    toHex() {\n        return pad64(this.r) + pad64(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    const P = Point.fromPrivateKey(privateKey);\n    return typeof privateKey === 'string' ? P.toHexX() : P.toRawX();\n}\nasync function schnorrSign(msgHash, privateKey, auxRand = exports.utils.randomBytes()) {\n    if (msgHash == null)\n        throw new TypeError(`sign: Expected valid message, not \"${msgHash}\"`);\n    if (!privateKey)\n        privateKey = 0n;\n    const { n } = CURVE;\n    const m = ensureBytes(msgHash);\n    const d0 = normalizePrivateKey(privateKey);\n    const rand = ensureBytes(auxRand);\n    if (rand.length !== 32)\n        throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    const P = Point.fromPrivateKey(d0);\n    const d = hasEvenY(P) ? d0 : n - d0;\n    const t0h = await taggedHash('BIP0340/aux', rand);\n    const t = d ^ t0h;\n    const k0h = await taggedHash('BIP0340/nonce', pad32b(t), P.toRawX(), m);\n    const k0 = mod(k0h, n);\n    if (k0 === 0n)\n        throw new Error('sign: Creation of signature failed. k is zero');\n    const R = Point.fromPrivateKey(k0);\n    const k = hasEvenY(R) ? k0 : n - k0;\n    const e = await createChallenge(R.x, P, m);\n    const sig = new SchnorrSignature(R.x, mod(k + e * d, n));\n    const isValid = await schnorrVerify(sig.toRawBytes(), m, P.toRawX());\n    if (!isValid)\n        throw new Error('sign: Invalid signature produced');\n    return typeof msgHash === 'string' ? sig.toHex() : sig.toRawBytes();\n}\nasync function schnorrVerify(signature, msgHash, publicKey) {\n    const sig = signature instanceof SchnorrSignature ? signature : SchnorrSignature.fromHex(signature);\n    const m = typeof msgHash === 'string' ? hexToBytes(msgHash) : msgHash;\n    const P = normalizePublicKey(publicKey);\n    const e = await createChallenge(sig.r, P, m);\n    const sG = Point.fromPrivateKey(sig.s);\n    const eP = P.multiply(e);\n    const R = sG.subtract(eP);\n    if (R.equals(Point.BASE) || !hasEvenY(R) || R.x !== sig.r)\n        return false;\n    return true;\n}\nexports.schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = (() => {\n    const webCrypto = typeof self === 'object' && 'crypto' in self ? self.crypto : undefined;\n    const nodeRequire = typeof module !== 'undefined' && typeof require === 'function';\n    return {\n        node: nodeRequire && !webCrypto ? require('crypto') : undefined,\n        web: webCrypto,\n    };\n})();\nexports.utils = {\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        let i = 8;\n        while (i--) {\n            const b32 = exports.utils.randomBytes(32);\n            const num = bytesToNumber(b32);\n            if (isWithinCurveOrder(num) && num !== 1n)\n                return b32;\n        }\n        throw new Error('Valid private key was not found in 8 iterations. PRNG is broken');\n    },\n    sha256: async (message) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            return Uint8Array.from(createHash('sha256').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            for (let message of messages) {\n                hash.update(message);\n            }\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(3n);\n        return cached;\n    },\n};\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"util\" has been externalized for browser compatibility. Cannot access \"util.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "\nconst Relay = require('./lib/relay')\nconst RelayPool = require('./lib/relay-pool')\nconst noble = require('noble-secp256k1')\nconst crypto = require('crypto')\n\nasync function signId(privkey, id) {\n\treturn await noble.schnorr.sign(id, privkey)\n}\n\nasync function verifyEvent(event) {\n\treturn await noble.schnorr.verify(event.sig, event.id, event.pubkey)\n}\n\nfunction utf8_encode(txt) {\n\tif (typeof TextEncoder !== 'undefined' && TextEncoder) {\n\t\tconst encoder = new TextEncoder()\n\t\treturn encoder.encode(txt)\n\t} else {\n\t\tconst util = require('util');\n\t\tconst encoder = new util.TextEncoder('utf-8');\n\t\treturn encoder.encode(txt)\n\t}\n}\n\nasync function calculateId(ev) {\n\tconst commit = eventCommitment(ev)\n\tconst sha256 = noble.utils.sha256;\n\tconst buf = utf8_encode(commit);\n\treturn hexEncode(await sha256(buf))\n}\n\nfunction eventCommitment(ev) {\n\tconst {pubkey,created_at,kind,tags,content} = ev\n\treturn JSON.stringify([0, pubkey, created_at, kind, tags, content])\n}\n\nfunction delegationCommitment(pk, conditions) {\n\treturn `nostr:delegation:${pk}:${conditions}`\n}\n\nasync function signDelegationToken(privkey, unsigned_token) \n{\n\tconst hash = hexEncode(await noble.utils.sha256(unsigned_token))\n\treturn (await signId(privkey, hash))\n}\n\nasync function createDelegation(privkey, publisherPubkey, conditions) {\n\tconst pubkey = getPublicKey(privkey)\n\tconst unsigned_token = delegationCommitment(publisherPubkey, conditions)\n\tconst token = await signDelegationToken(privkey, unsigned_token)\n\treturn {pubkey, publisherPubkey, conditions, token}\n}\n\nfunction createDelegationTag(delegation) {\n\tconst { pubkey, conditions, token } = delegation\n\treturn [\"delegation\", pubkey, conditions, token]\n}\n\nfunction upsert_delegation_tag(tags, delegation)\n{\n\tlet found = false\n\tfor (const tag of tags) {\n\t\tif (tag.length >= 4 && tag[0] === \"delegation\") {\n\t\t\ttag[1] = delegation.pubkey\n\t\t\ttag[2] = delegation.conditions\n\t\t\ttag[3] = delegation.token\n\t\t\treturn\n\t\t}\n\t}\n\ttags.push(createDelegationTag(delegation))\n}\n\nasync function createDelegationEvent(publisher_privkey, ev, delegation) {\n\tlet tags = ev.tags || []\n\n\tupsert_delegation_tag(tags, delegation)\n\n\tev.tags = tags\n\tev.pubkey = delegation.publisherPubkey\n\tev.id = await calculateId(ev)\n\tev.sig = await signId(publisher_privkey, ev.id)\n\treturn ev\n}\n\nfunction hexChar(val) {\n\tif (val < 10)\n\t\treturn String.fromCharCode(48 + val)\n\tif (val < 16)\n\t\treturn String.fromCharCode(97 + val - 10)\n}\n\nfunction hexEncode(buf) {\n\tlet str = \"\"\n\tfor (let i = 0; i < buf.length; i++) {\n\t\tconst c = buf[i]\n\t\tstr += hexChar(c >> 4)\n\t\tstr += hexChar(c & 0xF)\n\t}\n\treturn str\n}\n\nfunction base64_decode(str)\n{\n\tif (typeof Buffer !== 'undefined' && Buffer) {\n\t\treturn Buffer.from(str, 'base64')\n\t} else if (typeof atob !== 'undefined' && atob) {\n\t\treturn atob(str)\n\t}\n\tthrow new Error(\"no base64 implementation\")\n}\n\n\nfunction encryptDm(privkey, to, msg) {\n\tconst shared_point = noble.getSharedSecret(privkey, '02' + to)\n\tconst shared_x = shared_point.substr(2, 64)\n\tconst iv = crypto.randomBytes(16);\n\tconst cipher = crypto.createCipheriv(\n                'aes-256-cbc',\n                Buffer.from(shared_x, 'hex'),\n\t\tiv\n\t)\n\n\tlet encrypted = cipher.update(msg, 'utf8', 'base64');\n        encrypted += cipher.final('base64');\n\n\treturn encrypted + \"?iv=\" + iv.toString('base64')\n}\n\nfunction decryptDm(privkey, ev) {\n\tlet [enc, iv] = ev.content.split(\"?\")\n\tif (!iv || !enc)\n\t\treturn\n\tiv = iv.slice(3)\n\tiv = base64_decode(iv)\n\n\tconst shared_point = noble.getSharedSecret(privkey, '02' + ev.pubkey)\n\tconst shared_x = shared_point.substr(2, 64)\n\tconst decipher = crypto.createDecipheriv(\n                'aes-256-cbc',\n                Buffer.from(shared_x, 'hex'),\n                iv\n\t)\n\n\tlet decrypted = decipher.update(enc, \"base64\", \"utf8\")\n\tdecrypted += decipher.final(\"utf8\")\n\n\treturn decrypted\n}\n\n\nfunction getPublicKey(privkey) {\n\treturn noble.schnorr.getPublicKey(privkey)\n}\n\nmodule.exports = {\n\tRelay,\n\tRelayPool,\n\tsignId,\n\tverifyEvent,\n\tcalculateId,\n\tgetPublicKey,\n\tdecryptDm,\n\tencryptDm,\n\tdelegationCommitment,\n\tcreateDelegationTag,\n\tcreateDelegationEvent,\n\tcreateDelegation,\n\tsignDelegationToken,\n\teventCommitment\n}\n\n"],
  "mappings": "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",
  "names": ["d"]
}
